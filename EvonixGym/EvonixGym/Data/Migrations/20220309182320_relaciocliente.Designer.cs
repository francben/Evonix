// <auto-generated />
using System;
using EvonixGym.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EvonixGym.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220309182320_relaciocliente")]
    partial class relaciocliente
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EvonixGym.Data.Modelos.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCliente"), 1L, 1);

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dni")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EntrenadorIdEntrenador")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaAlta")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fechanacimiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdEntrenador")
                        .HasColumnType("int");

                    b.Property<int?>("IdEntrenamiento")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Imageperfil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Municipio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Provincia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sexo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCliente");

                    b.HasIndex("EntrenadorIdEntrenador");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("EvonixGym.Data.Modelos.Entrenador", b =>
                {
                    b.Property<int>("IdEntrenador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEntrenador"), 1L, 1);

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Baja")
                        .HasColumnType("bit");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dni")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAlta")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaAltaContrato")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FechaProxPago")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEntrenador");

                    b.ToTable("Entrenadores");
                });

            modelBuilder.Entity("EvonixGym.Data.Modelos.Rol", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "e6771b82-48c8-4357-9945-d67407149e27",
                            ConcurrencyStamp = "c0e5cdd6-704a-4049-b3cf-50d6497cbd2d",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "33a6dfe6-8a75-470b-861f-08e83d7bd26b",
                            ConcurrencyStamp = "0a176cf3-b05e-4d21-a849-93c53f8042cf",
                            Name = "Entrenador",
                            NormalizedName = "ENTRENADOR"
                        },
                        new
                        {
                            Id = "df07624e-8428-4c12-9343-59d99e1e64a3",
                            ConcurrencyStamp = "5ef6c437-dd5b-40b1-9721-4386a896102a",
                            Name = "Cliente",
                            NormalizedName = "CLIENTE"
                        });
                });

            modelBuilder.Entity("EvonixGym.Data.Modelos.Usuario", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "c6c1f17b-d86b-4a41-9fb5-e44663b8754d",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d3c1be0a-000c-4a3b-a0a0-b8679531570a",
                            Email = "usuadmin@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "USUADMIN@GMAIL.COM",
                            NormalizedUserName = "SUPERUSUARIO",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f027c548-8cf2-4692-8e2a-c8f9ce391b3f",
                            TwoFactorEnabled = false,
                            UserName = "SuperUsuario"
                        },
                        new
                        {
                            Id = "81495533-639e-4978-9a45-1acd201fb3b4",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "fa43972a-bf09-4f99-ae0b-765e61af14be",
                            Email = "entrenador@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "ENTRENADOR@GMAIL.COM",
                            NormalizedUserName = "JUAN",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "428dbfb0-5834-4786-a55f-f986027526ce",
                            TwoFactorEnabled = false,
                            UserName = "Juan"
                        },
                        new
                        {
                            Id = "a85dbaaa-d01e-42cf-9c51-6af3e1e80cbc",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b156697c-2cbd-4351-b7d6-a690be7b5429",
                            Email = "cliente@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "CLIENTE@GMAIL.COM",
                            NormalizedUserName = "FRAN",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "ae25305e-e4b0-459c-b37d-61328a664361",
                            TwoFactorEnabled = false,
                            UserName = "fran"
                        });
                });

            modelBuilder.Entity("EvonixGym.Data.Modelos.UsuarioClientes", b =>
                {
                    b.Property<int>("UsuarioClienteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioClienteID"), 1L, 1);

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UsuarioClienteID");

                    b.HasIndex("IdCliente");

                    b.HasIndex("UserId");

                    b.ToTable("UsuarioClientes");
                });

            modelBuilder.Entity("EvonixGym.Data.Modelos.UsuarioEntrenadores", b =>
                {
                    b.Property<int>("UsuarioEntrenadorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioEntrenadorID"), 1L, 1);

                    b.Property<int>("IdEntrenador")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UsuarioEntrenadorID");

                    b.HasIndex("IdEntrenador");

                    b.HasIndex("UserId");

                    b.ToTable("UsuarioEntrenadores");
                });

            modelBuilder.Entity("EvonixGym.Data.Modelos.UsuarioRol", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "c6c1f17b-d86b-4a41-9fb5-e44663b8754d",
                            RoleId = "e6771b82-48c8-4357-9945-d67407149e27"
                        },
                        new
                        {
                            UserId = "81495533-639e-4978-9a45-1acd201fb3b4",
                            RoleId = "33a6dfe6-8a75-470b-861f-08e83d7bd26b"
                        },
                        new
                        {
                            UserId = "a85dbaaa-d01e-42cf-9c51-6af3e1e80cbc",
                            RoleId = "df07624e-8428-4c12-9343-59d99e1e64a3"
                        });
                });

            modelBuilder.Entity("EvonixGym.Modelos.Archivo", b =>
                {
                    b.Property<int>("IdArchivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdArchivo"), 1L, 1);

                    b.Property<int?>("IdPregunta")
                        .HasColumnType("int");

                    b.Property<int?>("IdPreguntas")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkVideo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PreguntaIdPreguntas")
                        .HasColumnType("int");

                    b.Property<int?>("PreguntaIdPreguntas1")
                        .HasColumnType("int");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdArchivo");

                    b.HasIndex("PreguntaIdPreguntas");

                    b.HasIndex("PreguntaIdPreguntas1");

                    b.ToTable("Archivos");
                });

            modelBuilder.Entity("EvonixGym.Modelos.Archivoresp", b =>
                {
                    b.Property<int>("IdArchivoResp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdArchivoResp"), 1L, 1);

                    b.Property<int?>("IdPregunta")
                        .HasColumnType("int");

                    b.Property<int?>("IdRespuesta")
                        .HasColumnType("int");

                    b.Property<int?>("IdRespuestaNavigationIdRespuesta")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkVideo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdArchivoResp");

                    b.HasIndex("IdRespuestaNavigationIdRespuesta");

                    b.ToTable("archivoresps");
                });

            modelBuilder.Entity("EvonixGym.Modelos.ComposicionCorporal", b =>
                {
                    b.Property<int>("IdComposicion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdComposicion"), 1L, 1);

                    b.Property<int?>("CueIdCuestionario")
                        .HasColumnType("int");

                    b.Property<int?>("CueIdCuestionarioNavigationIdCuestionario")
                        .HasColumnType("int");

                    b.Property<string>("IdCuestionario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdComposicion");

                    b.HasIndex("CueIdCuestionarioNavigationIdCuestionario");

                    b.ToTable("composicionCorporals");
                });

            modelBuilder.Entity("EvonixGym.Modelos.ComposicionCorporalClient", b =>
                {
                    b.Property<int>("IdCcCliente")
                        .HasColumnType("int");

                    b.Property<int?>("IdComposicion")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("IdCcCliente");

                    b.HasIndex("IdComposicion");

                    b.ToTable("composicionCorporalClients");
                });

            modelBuilder.Entity("EvonixGym.Modelos.Cuestionario", b =>
                {
                    b.Property<int>("IdCuestionario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCuestionario"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdEntrenador")
                        .HasColumnType("int");

                    b.Property<int?>("IdEntrenadorNavigationIdEntrenador")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCuestionario");

                    b.HasIndex("IdEntrenadorNavigationIdEntrenador");

                    b.ToTable("Cuestionarios");
                });

            modelBuilder.Entity("EvonixGym.Modelos.CuestionarioClientes", b =>
                {
                    b.Property<int>("IdCuestionarioClientes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCuestionarioClientes"), 1L, 1);

                    b.Property<int?>("IdCliente")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("IdCuestionario")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("IdCuestionarioClientes");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdCuestionario");

                    b.ToTable("CuestionarioClientes");
                });

            modelBuilder.Entity("EvonixGym.Modelos.Perimetro", b =>
                {
                    b.Property<int>("IdPerimetro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPerimetro"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnidadDeMedida")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPerimetro");

                    b.ToTable("Perimetros");
                });

            modelBuilder.Entity("EvonixGym.Modelos.PerimetroDelCliente", b =>
                {
                    b.Property<int>("IdPerimetroCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPerimetroCliente"), 1L, 1);

                    b.Property<int?>("IdCliente")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("IdPerimetro")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("MedidaActual")
                        .HasColumnType("int");

                    b.Property<double?>("MedidaDeseada")
                        .HasColumnType("float");

                    b.HasKey("IdPerimetroCliente");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdPerimetro");

                    b.ToTable("perimetroDelClientes");
                });

            modelBuilder.Entity("EvonixGym.Modelos.PerimetrosCuestionario", b =>
                {
                    b.Property<int>("IdPerimetrosCuest")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPerimetrosCuest"), 1L, 1);

                    b.Property<int?>("IdCuestionario")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("IdPerimetro")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("IdPerimetrosCuest");

                    b.HasIndex("IdCuestionario");

                    b.HasIndex("IdPerimetro");

                    b.ToTable("PerimetrosCuestionarios");
                });

            modelBuilder.Entity("EvonixGym.Modelos.Pregunta", b =>
                {
                    b.Property<int>("IdPreguntas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPreguntas"), 1L, 1);

                    b.Property<int?>("IdCuestionario")
                        .HasColumnType("int");

                    b.Property<int?>("IdCuestionarioNavigationIdCuestionario")
                        .HasColumnType("int");

                    b.Property<string>("Pregunta1")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPreguntas");

                    b.HasIndex("IdCuestionarioNavigationIdCuestionario");

                    b.ToTable("Preguntas");
                });

            modelBuilder.Entity("EvonixGym.Modelos.Respuestum", b =>
                {
                    b.Property<int>("IdRespuesta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRespuesta"), 1L, 1);

                    b.Property<int?>("IdPregunta")
                        .HasColumnType("int");

                    b.Property<int?>("IdPreguntas")
                        .HasColumnType("int");

                    b.Property<int?>("IdPreguntasNavigationIdPreguntas")
                        .HasColumnType("int");

                    b.Property<string>("Respuesta")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdRespuesta");

                    b.HasIndex("IdPreguntasNavigationIdPreguntas");

                    b.ToTable("Respuesta");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("EvonixGym.Data.Modelos.Cliente", b =>
                {
                    b.HasOne("EvonixGym.Data.Modelos.Entrenador", "Entrenador")
                        .WithMany("Clientes")
                        .HasForeignKey("EntrenadorIdEntrenador");

                    b.Navigation("Entrenador");
                });

            modelBuilder.Entity("EvonixGym.Data.Modelos.UsuarioClientes", b =>
                {
                    b.HasOne("EvonixGym.Data.Modelos.Cliente", "Cliente")
                        .WithMany("UsuarioClientes")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EvonixGym.Data.Modelos.Usuario", "Usuario")
                        .WithMany("UsuarioClientes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("EvonixGym.Data.Modelos.UsuarioEntrenadores", b =>
                {
                    b.HasOne("EvonixGym.Data.Modelos.Entrenador", "Entrenador")
                        .WithMany("UsuarioEntrenadores")
                        .HasForeignKey("IdEntrenador")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EvonixGym.Data.Modelos.Usuario", "Usuario")
                        .WithMany("UsuarioEntrenadores")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entrenador");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("EvonixGym.Data.Modelos.UsuarioRol", b =>
                {
                    b.HasOne("EvonixGym.Data.Modelos.Rol", "Rol")
                        .WithMany("UsuarioRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EvonixGym.Data.Modelos.Usuario", "Usuario")
                        .WithMany("UsuarioRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("EvonixGym.Modelos.Archivo", b =>
                {
                    b.HasOne("EvonixGym.Modelos.Pregunta", null)
                        .WithMany("Archivos")
                        .HasForeignKey("PreguntaIdPreguntas");

                    b.HasOne("EvonixGym.Modelos.Pregunta", null)
                        .WithMany("imagenes")
                        .HasForeignKey("PreguntaIdPreguntas1");
                });

            modelBuilder.Entity("EvonixGym.Modelos.Archivoresp", b =>
                {
                    b.HasOne("EvonixGym.Modelos.Respuestum", "IdRespuestaNavigation")
                        .WithMany("Archivoresps")
                        .HasForeignKey("IdRespuestaNavigationIdRespuesta");

                    b.Navigation("IdRespuestaNavigation");
                });

            modelBuilder.Entity("EvonixGym.Modelos.ComposicionCorporal", b =>
                {
                    b.HasOne("EvonixGym.Modelos.Cuestionario", "CueIdCuestionarioNavigation")
                        .WithMany("ComposicionCorporals")
                        .HasForeignKey("CueIdCuestionarioNavigationIdCuestionario");

                    b.Navigation("CueIdCuestionarioNavigation");
                });

            modelBuilder.Entity("EvonixGym.Modelos.ComposicionCorporalClient", b =>
                {
                    b.HasOne("EvonixGym.Data.Modelos.Cliente", "Cliente")
                        .WithMany("ComposicionCorporalClient")
                        .HasForeignKey("IdCcCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EvonixGym.Modelos.ComposicionCorporal", "IdComposicionNavigation")
                        .WithMany("ComposicionCorporalClients")
                        .HasForeignKey("IdComposicion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("IdComposicionNavigation");
                });

            modelBuilder.Entity("EvonixGym.Modelos.Cuestionario", b =>
                {
                    b.HasOne("EvonixGym.Data.Modelos.Entrenador", "IdEntrenadorNavigation")
                        .WithMany("Cuestionarios")
                        .HasForeignKey("IdEntrenadorNavigationIdEntrenador");

                    b.Navigation("IdEntrenadorNavigation");
                });

            modelBuilder.Entity("EvonixGym.Modelos.CuestionarioClientes", b =>
                {
                    b.HasOne("EvonixGym.Data.Modelos.Cliente", "IdClienteNav")
                        .WithMany("Cuestionarios")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EvonixGym.Modelos.Cuestionario", "IdCuestionarioNavigation")
                        .WithMany("CuestionarioClientes")
                        .HasForeignKey("IdCuestionario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdClienteNav");

                    b.Navigation("IdCuestionarioNavigation");
                });

            modelBuilder.Entity("EvonixGym.Modelos.PerimetroDelCliente", b =>
                {
                    b.HasOne("EvonixGym.Data.Modelos.Cliente", "Cliente")
                        .WithMany("PerimetroDelClientes")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EvonixGym.Modelos.Perimetro", "IdPerimetroNavigation")
                        .WithMany("PerimetroDelClientes")
                        .HasForeignKey("IdPerimetro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("IdPerimetroNavigation");
                });

            modelBuilder.Entity("EvonixGym.Modelos.PerimetrosCuestionario", b =>
                {
                    b.HasOne("EvonixGym.Modelos.Cuestionario", "IdCuestionarioNavigation")
                        .WithMany("PerimetrosCuestionarios")
                        .HasForeignKey("IdCuestionario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EvonixGym.Modelos.Perimetro", "Perimetro")
                        .WithMany("PerimetrosCuestionario")
                        .HasForeignKey("IdPerimetro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdCuestionarioNavigation");

                    b.Navigation("Perimetro");
                });

            modelBuilder.Entity("EvonixGym.Modelos.Pregunta", b =>
                {
                    b.HasOne("EvonixGym.Modelos.Cuestionario", "IdCuestionarioNavigation")
                        .WithMany("Pregunta")
                        .HasForeignKey("IdCuestionarioNavigationIdCuestionario");

                    b.Navigation("IdCuestionarioNavigation");
                });

            modelBuilder.Entity("EvonixGym.Modelos.Respuestum", b =>
                {
                    b.HasOne("EvonixGym.Modelos.Pregunta", "IdPreguntasNavigation")
                        .WithMany("Respuesta")
                        .HasForeignKey("IdPreguntasNavigationIdPreguntas");

                    b.Navigation("IdPreguntasNavigation");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("EvonixGym.Data.Modelos.Rol", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("EvonixGym.Data.Modelos.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("EvonixGym.Data.Modelos.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("EvonixGym.Data.Modelos.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EvonixGym.Data.Modelos.Cliente", b =>
                {
                    b.Navigation("ComposicionCorporalClient");

                    b.Navigation("Cuestionarios");

                    b.Navigation("PerimetroDelClientes");

                    b.Navigation("UsuarioClientes");
                });

            modelBuilder.Entity("EvonixGym.Data.Modelos.Entrenador", b =>
                {
                    b.Navigation("Clientes");

                    b.Navigation("Cuestionarios");

                    b.Navigation("UsuarioEntrenadores");
                });

            modelBuilder.Entity("EvonixGym.Data.Modelos.Rol", b =>
                {
                    b.Navigation("UsuarioRoles");
                });

            modelBuilder.Entity("EvonixGym.Data.Modelos.Usuario", b =>
                {
                    b.Navigation("UsuarioClientes");

                    b.Navigation("UsuarioEntrenadores");

                    b.Navigation("UsuarioRoles");
                });

            modelBuilder.Entity("EvonixGym.Modelos.ComposicionCorporal", b =>
                {
                    b.Navigation("ComposicionCorporalClients");
                });

            modelBuilder.Entity("EvonixGym.Modelos.Cuestionario", b =>
                {
                    b.Navigation("ComposicionCorporals");

                    b.Navigation("CuestionarioClientes");

                    b.Navigation("PerimetrosCuestionarios");

                    b.Navigation("Pregunta");
                });

            modelBuilder.Entity("EvonixGym.Modelos.Perimetro", b =>
                {
                    b.Navigation("PerimetroDelClientes");

                    b.Navigation("PerimetrosCuestionario");
                });

            modelBuilder.Entity("EvonixGym.Modelos.Pregunta", b =>
                {
                    b.Navigation("Archivos");

                    b.Navigation("Respuesta");

                    b.Navigation("imagenes");
                });

            modelBuilder.Entity("EvonixGym.Modelos.Respuestum", b =>
                {
                    b.Navigation("Archivoresps");
                });
#pragma warning restore 612, 618
        }
    }
}
